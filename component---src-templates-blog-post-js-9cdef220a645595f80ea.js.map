{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","_this$props$pageConte","this","props","pageContext","previous","next","_this$props$pageConte2","category","post","Object","assign","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteTitle","social","react__WEBPACK_IMPORTED_MODULE_2___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","location","title","blog","_components_seo__WEBPACK_IMPORTED_MODULE_5__","frontmatter","type","description","excerpt","image","otherMeta","makeMetaSpecs","facebook","date","className","styles","BlogContentWrapper","BlogContent","dangerouslySetInnerHTML","__html","html","style","marginBottom","rhythm","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","rel","BlogSidebar","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","headerFontFamily","bodyFontFamily","overrideThemeStyles","_ref","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","h1,h2,h3,h4,h5,h6","typography","Typography","adjustFontSizeTo","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","prefix","specs","filter","spec","Array","isArray","length","map","field","value","defaultValue","property","content","SEO","_ref2","lang","meta","keywords","_staticQueryData$data","_public_static_d_2544621688_json__WEBPACK_IMPORTED_MODULE_1__","icon","metaDescription","_image","childImageSharp","fixed","fluid","srcWebp","_reach_router__WEBPACK_IMPORTED_MODULE_5__","_ref3","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","concat","url","join","defaultProps","arrayOf","oneOf","Header","styled","header","withConfig","displayName","componentId","srcSet","split","src","index","_src$trim$split","trim","w","rs","replace","BlogHeader","_ref$blog","react_default","gatsby_browser_entry","banner","srcSetWebp","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","author","BlogPostHeader","marginTop","fontFamily","Fragment","toUpperCase","_3902628348","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop"],"mappings":"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","file":"component---src-templates-blog-post-js-9cdef220a645595f80ea.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO, { makeMetaSpecs } from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport styles from \"./blog-post.module.scss\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const { previous, next, category = null } = this.props.pageContext\n    const post = Object.assign(\n      {},\n      this.props.data.markdownRemark,\n      category && { category }\n    )\n    const { siteTitle, social } = this.props.data.site.siteMetadata\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} blog={post}>\n        <SEO\n          title={post.frontmatter.title}\n          type={\"article\"}\n          description={post.frontmatter.description || post.excerpt}\n          image={post.frontmatter.image}\n          otherMeta={makeMetaSpecs(\"article\", [\n            [\"author\", social.facebook],\n            [\"published_time\", post.frontmatter.date],\n            post.category && [\"section\", post.category.title],\n          ])}\n        />\n        <div className={styles.BlogContentWrapper}>\n          <div className={styles.BlogContent}>\n            <div\n              className={\"mt20\"}\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <hr\n              style={{\n                marginBottom: rhythm(1),\n              }}\n            />\n\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </div>\n          <div className={styles.BlogSidebar} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        social {\n          facebook\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            resize(width: 1500, height: 1500) {\n              src\n            }\n            fluid(maxWidth: 786) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"15.6px\"\nkirkhamTheme.baseLineHeight = 1.64\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn SC\", styles: [\"400\"] },\n  {\n    name: \"Vollkorn\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn SC\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Vollkorn\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n  \"h1,h2,h3,h4,h5,h6\": {\n    color: \"#fff\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const adjustFontSizeTo = typography.adjustFontSizeTo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Location } from \"@reach/router\"\n\nexport function makeMetaSpecs(prefix, specs) {\n  return specs\n    .filter(spec => Array.isArray(spec) && spec.length >= 2)\n    .map(([field, value, defaultValue]) => ({\n      property: prefix + \":\" + field,\n      content: value || defaultValue,\n    }))\n}\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n  type,\n  image,\n  otherMeta,\n}) {\n  const {\n    site: { siteMetadata },\n    icon,\n  } = useStaticQuery(\n    graphql`\n      query {\n        icon: file(absolutePath: { regex: \"/icon.png/\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            url\n            title\n            description\n            author\n            social {\n              facebook\n            }\n          }\n        }\n      }\n    `\n  )\n\n  let metaDescription = description || siteMetadata.description,\n    _image = (image || icon).childImageSharp\n\n  _image = (_image.fixed || _image.fluid).srcWebp\n\n  return (\n    <Location>\n      {({ location }) => (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            ...makeMetaSpecs(\"og\", [\n              [\"url\", siteMetadata.url + location.pathname],\n              [\"title\", title],\n              [\"description\", metaDescription],\n              [\"type\", type],\n              [\"image\", _image],\n              [\"image:alt\", metaDescription],\n            ]),\n            ...otherMeta,\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )}\n    </Location>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  type: `website`,\n  otherMeta: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"website\", \"article\"]),\n  otherMeta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport styled from \"styled-components\"\n\nconst responsives = srcSet =>\n    srcSet\n      .split(\",\")\n      .map((src, index) => {\n        let [url, w] = src.trim().split(\" \"),\n          rs = `background-image: url(${url});`\n        if (index > 0)\n          rs = `@media (min-width: ${w.replace(/w/, \"px\")}){\n        ${rs}\n      }`\n        return rs\n      })\n      .join(\"\"),\n  Header = styled.header`\n    ${props => responsives(props.srcSet)}\n  `\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      return (\n        <Header\n          srcSet={banner.childImageSharp.fluid.srcSetWebp}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 12),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                  {blog.category && (\n                    <>\n                      &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                      <strong>{blog.category.title.toUpperCase()}</strong>\n                    </>\n                  )}\n                </p>\n              </div>\n            )}\n          </div>\n        </Header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n"],"sourceRoot":""}