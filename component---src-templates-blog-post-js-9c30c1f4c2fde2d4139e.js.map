{"version":3,"sources":["webpack:///./src/components/LyricTranslator.js","webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js","webpack:///./src/utils/consts.js","webpack:///./src/utils/helpers.js"],"names":["LyricTranslator","styled","div","withConfig","displayName","componentId","postGridGutterLarger","LyricTranslatorPanel","mediaMin","tablet","renderAst","RehypeReact","createElement","React","components","lyric-translator","lyric-translator-panel","Compiler","BlogPostTemplate","render","_this$props$pageConte","this","props","pageContext","previous","next","_this$props$pageConte2","category","post","Object","assign","data","markdownRemark","_this$props$data$site","site","siteMetadata","siteTitle","social","console","log","htmlAst","react_default","a","layout","location","title","blog","seo","frontmatter","type","description","excerpt","image","otherMeta","makeMetaSpecs","facebook","date","className","styles","BlogContentWrapper","BlogContent","style","marginBottom","rhythm","display","flexWrap","justifyContent","listStyle","padding","gatsby_browser_entry","to","fields","slug","rel","BlogSidebar","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","headerFontFamily","bodyFontFamily","overrideThemeStyles","_ref","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","h1,h2,h3,h4,h5,h6","typography","Typography","adjustFontSizeTo","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","json","shape","prefix","specs","filter","spec","Array","isArray","length","map","field","value","defaultValue","property","content","SEO","_ref2","lang","meta","keywords","_staticQueryData$data","_public_static_d_2544621688_json__WEBPACK_IMPORTED_MODULE_1__","icon","metaDescription","_image","childImageSharp","fixed","fluid","srcWebp","react__WEBPACK_IMPORTED_MODULE_2___default","_reach_router__WEBPACK_IMPORTED_MODULE_5__","_ref3","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","concat","url","join","defaultProps","arrayOf","oneOf","Header","header","srcSet","split","src","index","_src$trim$split","trim","w","rs","replace","BlogHeader","_ref$blog","banner","srcSetWebp","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","author","BlogPostHeader","marginTop","fontFamily","Fragment","toUpperCase","_3902628348","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop","postGridGutter","sizesMin","desktop","phone","keys","reduce","acc","label","rules"],"mappings":"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","file":"component---src-templates-blog-post-js-9c30c1f4c2fde2d4139e.js","sourcesContent":["import React from \"react\"\nimport styled from \"styled-components\"\nimport { mediaMin } from \"../utils/helpers\"\nimport { postGridGutterLarger } from \"../utils/consts\"\n\nexport const LyricTranslator = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  margin: 0 -${postGridGutterLarger}rem;\n`\n\nexport const LyricTranslatorPanel = styled.div`\n  padding: 0 ${postGridGutterLarger}rem;\n  flex: 0 0 100%;\n  width: 100%;\n  ${mediaMin.tablet(`\n    flex: 0 0 50%;\n    width: 50%;\n  `)}\n`\n","import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO, { makeMetaSpecs } from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport styles from \"./blog-post.module.scss\"\nimport RehypeReact from \"rehype-react\"\nimport {\n  LyricTranslator,\n  LyricTranslatorPanel,\n} from \"../components/LyricTranslator\"\n\nconst renderAst = new RehypeReact({\n  createElement: React.createElement,\n  components: {\n    \"lyric-translator\": LyricTranslator,\n    \"lyric-translator-panel\": LyricTranslatorPanel,\n  },\n}).Compiler\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const { previous, next, category = null } = this.props.pageContext\n    const post = Object.assign(\n      {},\n      this.props.data.markdownRemark,\n      category && { category }\n    )\n    const { siteTitle, social } = this.props.data.site.siteMetadata\n    console.log(post.htmlAst)\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} blog={post}>\n        <SEO\n          title={post.frontmatter.title}\n          type={\"article\"}\n          description={post.frontmatter.description || post.excerpt}\n          image={post.frontmatter.image}\n          otherMeta={makeMetaSpecs(\"article\", [\n            [\"author\", social.facebook],\n            [\"published_time\", post.frontmatter.date],\n            post.category && [\"section\", post.category.title],\n          ])}\n        />\n        <div className={styles.BlogContentWrapper}>\n          <div className={styles.BlogContent}>\n            <div className={\"mt20\"}>{renderAst(post.htmlAst)}</div>\n            <hr\n              style={{\n                marginBottom: rhythm(1),\n              }}\n            />\n\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </div>\n          <div className={styles.BlogSidebar} />\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n        social {\n          facebook\n        }\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 240)\n      html\n      htmlAst\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n        image {\n          childImageSharp {\n            resize(width: 1500, height: 1500) {\n              src\n            }\n            fluid(maxWidth: 786) {\n              ...GatsbyImageSharpFluid_withWebp\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"15.6px\"\nkirkhamTheme.baseLineHeight = 1.64\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn SC\", styles: [\"400\"] },\n  {\n    name: \"Vollkorn\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn SC\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Vollkorn\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n  \"h1,h2,h3,h4,h5,h6\": {\n    color: \"#fff\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const adjustFontSizeTo = typography.adjustFontSizeTo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Location } from \"@reach/router\"\n\nexport function makeMetaSpecs(prefix, specs) {\n  return specs\n    .filter(spec => Array.isArray(spec) && spec.length >= 2)\n    .map(([field, value, defaultValue]) => ({\n      property: prefix + \":\" + field,\n      content: value || defaultValue,\n    }))\n}\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n  type,\n  image,\n  otherMeta,\n}) {\n  const {\n    site: { siteMetadata },\n    icon,\n  } = useStaticQuery(\n    graphql`\n      query {\n        icon: file(absolutePath: { regex: \"/icon.png/\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            url\n            title\n            description\n            author\n            social {\n              facebook\n            }\n          }\n        }\n      }\n    `\n  )\n\n  let metaDescription = description || siteMetadata.description,\n    _image = (image || icon).childImageSharp\n\n  _image = (_image.fixed || _image.fluid).srcWebp\n\n  return (\n    <Location>\n      {({ location }) => (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            ...makeMetaSpecs(\"og\", [\n              [\"url\", siteMetadata.url + location.pathname],\n              [\"title\", title],\n              [\"description\", metaDescription],\n              [\"type\", type],\n              [\"image\", _image],\n              [\"image:alt\", metaDescription],\n            ]),\n            ...otherMeta,\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )}\n    </Location>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  type: `website`,\n  otherMeta: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"website\", \"article\"]),\n  otherMeta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport styled from \"styled-components\"\n\nconst responsives = srcSet =>\n    srcSet\n      .split(\",\")\n      .map((src, index) => {\n        let [url, w] = src.trim().split(\" \"),\n          rs = `background-image: url(${url});`\n        if (index > 0)\n          rs = `@media (min-width: ${w.replace(/w/, \"px\")}){\n        ${rs}\n      }`\n        return rs\n      })\n      .join(\"\"),\n  Header = styled.header`\n    ${props => responsives(props.srcSet)}\n  `\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      return (\n        <Header\n          srcSet={banner.childImageSharp.fluid.srcSetWebp}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 12),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                  {blog.category && (\n                    <>\n                      &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                      <strong>{blog.category.title.toUpperCase()}</strong>\n                    </>\n                  )}\n                </p>\n              </div>\n            )}\n          </div>\n        </Header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n","export const postGridGutter = 0.7\nexport const postGridGutterLarger = postGridGutter * 1.3\n","const sizesMin = {\n  desktop: 1024,\n  tablet: 768,\n  phone: 0,\n}\n\n// Iterate through the sizes and create a media template\nexport const mediaMin = Object.keys(sizesMin).reduce((acc, label) => {\n  acc[label] = rules => `\n    @media (min-width: ${sizesMin[label]}px) {\n      ${rules}\n    }\n  `\n\n  return acc\n}, {})\n"],"sourceRoot":""}