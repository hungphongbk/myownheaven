{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","styles","headerFontFamily","bodyFontFamily","overrideThemeStyles","_ref","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","author","concat","length","join","defaultProps","arrayOf","BlogHeader","_ref$blog","blog","react_default","gatsby_browser_entry","_ref2","banner","headerStyle","backgroundImage","childImageSharp","fluid","srcWebp","style","className","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","to","BlogPostHeader","frontmatter","display","marginBottom","marginTop","fontFamily","date","_3902628348","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop"],"mappings":"+LAMMA,4FACJC,OAAA,WAAS,IAEDC,EADWC,KAAKC,MAAdC,KACeC,KAAKC,aAAaC,MAEzC,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAQC,SAAUV,KAAKC,MAAMS,SAAUL,MAAON,GAC5CO,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAKN,MAAM,mBACXC,EAAAC,EAAAC,cAAA,uBACAF,EAAAC,EAAAC,cAAA,yEATmBI,IAAMC,WAelBhB,YAER,IAAMiB,EAAS,kCCvBtB,IAAsBC,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,oCCA/CK,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,GAAAQ,EAAAR,EAAAM,EAAAC,GAAAE,EAAAT,EAAA,IAAAU,EAAAV,EAAAM,EAAAG,GAAAT,EAAAC,EAAAC,EAAA,sBAAAQ,EAAAvB,IAAAa,EAAA,SAYMW,EAAqBnB,IAAMoB,cAAc,IAEzCT,EAAc,SAAAtB,GAAK,OACvBwB,EAAAlB,EAAAC,cAACuB,EAAmBE,SAApB,KACG,SAAAC,GACC,OACEjC,EAAMC,MACLgC,EAAgBjC,EAAMkC,QAAUD,EAAgBjC,EAAMkC,OAAOjC,MAEtDD,EAAMH,QAAUG,EAAMmC,UAC5BnC,EAAMC,KAAOD,EAAMC,KAAKA,KAAOgC,EAAgBjC,EAAMkC,OAAOjC,MAGvDuB,EAAAlB,EAAAC,cAAA,uCA4Bfe,EAAYc,UAAY,CACtBnC,KAAMoC,IAAUC,OAChBJ,MAAOG,IAAUE,OAAOC,WACxB3C,OAAQwC,IAAUI,KAClBN,SAAUE,IAAUI,wCCzDtBtB,EAAAC,EAAAC,EAAA,sBAAAqB,IAAAvB,EAAAC,EAAAC,EAAA,sBAAAsB,IAAA,IAAAC,EAAAzB,EAAA,KAAA0B,EAAA1B,EAAAM,EAAAmB,GAAAE,EAAA3B,EAAA,KAAA4B,EAAA5B,EAAAM,EAAAqB,GAGAE,IAAaC,aAAe,OAC5BD,IAAaE,eAAiB,KAC9BF,IAAaG,YAAc,CACzB,CAAEC,KAAM,WAAYC,OAAQ,CAAC,QAC7B,CACED,KAAM,SACNC,OAAQ,CAAC,MAAO,OAAQ,MAAO,UAGnCL,IAAaM,iBAAmB,CAAC,WAAY,SAC7CN,IAAaO,eAAiB,CAAC,SAAU,cACzCP,IAAaQ,oBAAsB,SAAAC,EAAaC,GAAbD,EAAGf,OAAH,MAA0B,CAC3DiB,kCAAmC,CACjCC,MAAO,UACPC,eAAgB,QAElBC,WAAY,CACVC,SAAU,aAId,IAAMC,EAAa,IAAIC,IAAWjB,KAOnBgB,IACFtB,EAASsB,EAAWtB,OACpBC,EAAQqB,EAAWrB,wGC3B1BuB,EAAmB,SAAAT,GAAkB,IAAfhD,EAAegD,EAAfhD,SACpB0D,EAAgBC,UAAOC,4BAA4B5D,EAAS6D,UAClE,OAAO3D,IAAMJ,cAAcgE,IAApBC,OAAAC,OAAA,CACLhE,WACA0D,iBACGA,EAAcO,QAIrBR,EAAiB9B,UAAY,CAC3B3B,SAAU4B,IAAUsC,MAAM,CACxBL,SAAUjC,IAAUE,OAAOC,aAC1BA,YAGU0B,4xDCTf,SAASU,EAATnB,GAA2D,IAA5CoB,EAA4CpB,EAA5CoB,YAAaC,EAA+BrB,EAA/BqB,KAAMC,EAAyBtB,EAAzBsB,KAAMC,EAAmBvB,EAAnBuB,SAAU5E,EAASqD,EAATrD,MACxCF,EADiD+E,EAAAhF,KACjDC,KAcFgF,EAAkBL,GAAe3E,EAAKC,aAAa0E,YAEzD,OACExE,EAAAC,EAAAC,cAAC4E,EAAA7E,EAAD,CACE8E,eAAgB,CACdN,QAEF1E,MAAOA,EACPiF,cAAa,QAAUnF,EAAKC,aAAaC,MACzC2E,KAAM,CACJ,CACE3B,KAAI,cACJkC,QAASJ,GAEX,CACEK,SAAQ,WACRD,QAASlF,GAEX,CACEmF,SAAQ,iBACRD,QAASJ,GAEX,CACEK,SAAQ,UACRD,QAAO,WAET,CACElC,KAAI,eACJkC,QAAO,WAET,CACElC,KAAI,kBACJkC,QAASpF,EAAKC,aAAaqF,QAE7B,CACEpC,KAAI,gBACJkC,QAASlF,GAEX,CACEgD,KAAI,sBACJkC,QAASJ,IAGVO,OACCT,EAASU,OAAS,EACd,CACEtC,KAAI,WACJkC,QAASN,EAASW,KAAT,OAEX,IAELF,OAAOV,KAKhBH,EAAIgB,aAAe,CACjBd,KAAI,KACJC,KAAM,GACNC,SAAU,GACVH,YAAW,IAGbD,EAAIxC,UAAY,CACdyC,YAAaxC,IAAUE,OACvBuC,KAAMzC,IAAUE,OAChBwC,KAAM1C,IAAUwD,QAAQxD,IAAUC,QAClC0C,SAAU3C,IAAUwD,QAAQxD,IAAUE,QACtCnC,MAAOiC,IAAUE,OAAOC,YAGXoC,0VChDT1C,EAAK,aAkBI4D,EA7DI,SAAArC,GAAA,IAAAsC,EAAAtC,EAAGuC,YAAH,IAAAD,EAAU,KAAVA,EAAA,OACjBE,EAAA3F,EAAAC,cAAC2F,EAAA,EAAD,CACEhE,MAAOA,EACPrC,OAAQ,SAAAsG,GAAsB,IAAnBC,EAAmBD,EAAnBC,OAAQlG,EAAWiG,EAAXjG,KACXmG,EAAc,CAClBC,gBAAe,OAASF,EAAOG,gBAAgBC,MAAMC,QAAtC,KAGjB,OACER,EAAA3F,EAAAC,cAAA,UACEmG,MAAOL,EACPM,UAAWC,IAAWZ,GAAQ3C,IAAOwD,iBAErCZ,EAAA3F,EAAAC,cAAA,OAAKoG,UAAWtD,IAAOyD,UAAWJ,MAAO,CAAEK,OAAQ,SACjDd,EAAA3F,EAAAC,cAACyG,EAAA1G,EAAD,CAAMqG,UAAWtD,IAAO4D,OAAQC,GAAI,KAClCjB,EAAA3F,EAAAC,cAAA,UAAKL,EAAKC,aAAaqF,QACvBS,EAAA3F,EAAAC,cAAA,UACE0F,EAAA3F,EAAAC,cAAA,SAAIL,EAAKC,aAAa0E,eAGzBmB,GACCC,EAAA3F,EAAAC,cAAA,OAAKoG,UAAWtD,IAAO8D,gBACrBlB,EAAA3F,EAAAC,cAAA,UAAKyF,EAAKoB,YAAYhH,OACtB6F,EAAA3F,EAAAC,cAAA,KACEmG,MAAKlC,OAAAC,OAAA,GACA9B,aAAM,IADN,CAEH0E,QAAO,QACPC,aAAc5E,YAAO,KACrB6E,UAAW7E,YAAO,GAClB8E,WAAY,sBAGbxB,EAAKoB,YAAYK,KATpB,OAS8BvH,EAAKC,aAAaqF,YA/B9DvF,KAAAyH,KCDIC,4FACJ9H,OAAA,WAIE,OACEoG,EAAA3F,EAAAC,cAAA,OACEoG,UAAWC,IACTvD,IAAOsE,OACP5H,KAAKC,MAAMgG,MAAQ3C,IAAOuE,cAG5B3B,EAAA3F,EAAAC,cAACsH,EAAD,CAAY7B,KAAMjG,KAAKC,MAAMgG,OAC7BC,EAAA3F,EAAAC,cAAA,QAAMmG,MAAO,CAAEoB,WAAY,MAAOP,UAAW,SAC3CtB,EAAA3F,EAAAC,cAAA,OAAKoG,UAActD,IAAOyD,UAAZ,SACX/G,KAAKC,MAAMmC,gBAfHxB,IAAMC,WAuB3B+G,EAAO/B,aAAe,CACpBI,KAAM,MAGO2B","file":"component---src-pages-404-js-797e779cd2e4c17d2397.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"16px\"\nkirkhamTheme.baseLineHeight = 1.24\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn\", styles: [\"400\"] },\n  {\n    name: \"Roboto\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Roboto\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      const headerStyle = {\n        backgroundImage: `url(${banner.childImageSharp.fluid.srcWebp})`,\n      }\n\n      return (\n        <header\n          style={headerStyle}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 5),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                </p>\n              </div>\n            )}\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n"],"sourceRoot":""}