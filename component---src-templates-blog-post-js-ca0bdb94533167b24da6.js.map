{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js"],"names":["BlogPostTemplate","render","post","this","props","data","markdownRemark","siteTitle","site","siteMetadata","title","_this$props$pageConte","pageContext","previous","next","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","blog","_components_seo__WEBPACK_IMPORTED_MODULE_4__","frontmatter","type","description","excerpt","className","styles","BlogContentWrapper","BlogContent","dangerouslySetInnerHTML","__html","html","style","marginBottom","rhythm","display","flexWrap","justifyContent","listStyle","padding","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","rel","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","headerFontFamily","bodyFontFamily","overrideThemeStyles","_ref","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","typography","Typography","adjustFontSizeTo","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","_ref2","prefix","specs","lang","meta","keywords","image","_staticQueryData$data","_public_static_d_3951138276_json__WEBPACK_IMPORTED_MODULE_1__","icon","metaDescription","_image","childImageSharp","fixed","fluid","srcWebp","react__WEBPACK_IMPORTED_MODULE_2___default","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","content","concat","map","field","value","defaultValue","length","join","defaultProps","arrayOf","oneOf","BlogHeader","_ref$blog","react_default","gatsby_browser_entry","banner","headerStyle","backgroundImage","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","author","BlogPostHeader","marginTop","fontFamily","date","_3902628348","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop"],"mappings":"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","file":"component---src-templates-blog-post-js-ca0bdb94533167b24da6.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\nimport styles from \"./blog-post.module.scss\"\n\nclass BlogPostTemplate extends React.Component {\n  render() {\n    const post = this.props.data.markdownRemark\n    const siteTitle = this.props.data.site.siteMetadata.title\n    const { previous, next } = this.props.pageContext\n\n    return (\n      <Layout location={this.props.location} title={siteTitle} blog={post}>\n        <SEO\n          title={post.frontmatter.title}\n          type={\"article\"}\n          description={post.frontmatter.description || post.excerpt}\n        />\n        <div className={styles.BlogContentWrapper}>\n          <div className={styles.BlogContent}>\n            <div\n              className={\"mt20\"}\n              dangerouslySetInnerHTML={{ __html: post.html }}\n            />\n            <hr\n              style={{\n                marginBottom: rhythm(1),\n              }}\n            />\n\n            <ul\n              style={{\n                display: `flex`,\n                flexWrap: `wrap`,\n                justifyContent: `space-between`,\n                listStyle: `none`,\n                padding: 0,\n              }}\n            >\n              <li>\n                {previous && (\n                  <Link to={previous.fields.slug} rel=\"prev\">\n                    ← {previous.frontmatter.title}\n                  </Link>\n                )}\n              </li>\n              <li>\n                {next && (\n                  <Link to={next.fields.slug} rel=\"next\">\n                    {next.frontmatter.title} →\n                  </Link>\n                )}\n              </li>\n            </ul>\n          </div>\n        </div>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogPostTemplate\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug($slug: String!) {\n    site {\n      siteMetadata {\n        title\n        author\n      }\n    }\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      id\n      excerpt(pruneLength: 160)\n      html\n      frontmatter {\n        title\n        date(formatString: \"MMMM DD, YYYY\")\n        description\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"15px\"\nkirkhamTheme.baseLineHeight = 1.64\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn SC\", styles: [\"400\"] },\n  {\n    name: \"Vollkorn\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn SC\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Vollkorn\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const adjustFontSizeTo = typography.adjustFontSizeTo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction makeMetaSpecs(prefix, specs) {\n  return specs.map(([field, value, defaultValue]) => ({\n    name: prefix + \":\" + field,\n    content: value || defaultValue,\n  }))\n}\n\nfunction SEO({ description, lang, meta, keywords, title, type, image }) {\n  const { site, icon } = useStaticQuery(\n    graphql`\n      query {\n        icon: file(absolutePath: { regex: \"/icon.png/\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  let metaDescription = description || site.siteMetadata.description,\n    _image = (image || icon).childImageSharp\n  _image = (_image.fixed || _image.fluid).srcWebp\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        ...makeMetaSpecs(\"og\", [\n          [\"title\", title],\n          [\"description\", metaDescription],\n          [\"type\", type],\n          [\"image\", _image],\n          [\"image:alt\", metaDescription],\n        ])\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  type: `website`,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"website\", \"article\"]),\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      const headerStyle = {\n        backgroundImage: `url(${banner.childImageSharp.fluid.srcWebp})`,\n      }\n\n      return (\n        <header\n          style={headerStyle}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 12),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                </p>\n              </div>\n            )}\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n"],"sourceRoot":""}