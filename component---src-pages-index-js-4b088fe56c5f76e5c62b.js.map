{"version":3,"sources":["webpack:///./src/components/PostItem/PostItemOne.js","webpack:///./src/components/PostItem/PostItem.js","webpack:///./src/components/PostGrid.js","webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js","webpack:///./src/utils/consts.js","webpack:///./src/utils/helpers.js","webpack:///./node_modules/core-js/modules/es6.object.keys.js","webpack:///./node_modules/core-js/modules/_object-sap.js"],"names":["Wrapper","styled","article","withConfig","displayName","componentId","postGridGutterLarger","postGridGutter","postGridGutterSmaller","components","_ref","node","post","title","frontmatter","fields","slug","react_default","a","createElement","gatsby_browser_entry","style","boxShadow","to","className","styles","image","src","childImageSharp","resize","alt","description","date","dangerouslySetInnerHTML","__html","excerpt","PostItem","props","React","itemType","propTypes","PropTypes","number","isRequired","respColumn","index","mediaSelect","columns","PostGrid","div","mediaMin","phone","tablet","desktop","BlogIndex","render","data","this","siteTitle","site","siteMetadata","posts","allMarkdownRemark","edges","layout","location","seo","keywords","components_PostGrid","map","components_PostItem_PostItem","key","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","object","string","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","headerFontFamily","bodyFontFamily","overrideThemeStyles","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","h1,h2,h3,h4,h5,h6","typography","Typography","adjustFontSizeTo","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","makeMetaSpecs","prefix","specs","filter","spec","Array","isArray","length","field","value","defaultValue","property","content","SEO","_ref2","lang","meta","type","otherMeta","_staticQueryData$data","_public_static_d_1311860518_json__WEBPACK_IMPORTED_MODULE_1__","icon","metaDescription","_image","fixed","fluid","react__WEBPACK_IMPORTED_MODULE_2___default","_reach_router__WEBPACK_IMPORTED_MODULE_5__","_ref3","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","concat","url","join","defaultProps","arrayOf","oneOf","Header","header","srcSet","split","_src$trim$split","trim","w","rs","replace","BlogHeader","_ref$blog","blog","banner","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","author","BlogPostHeader","display","marginBottom","marginTop","fontFamily","category","Fragment","toUpperCase","_671455968","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop","sizesMin","keys","reduce","acc","label","rules","toObject","$keys","it","$export","core","fails","KEY","exec","fn","exp","S","F"],"mappings":"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","file":"component---src-pages-index-js-4b088fe56c5f76e5c62b.js","sourcesContent":["import React from \"react\"\nimport { rhythm } from \"../../utils/typography\"\nimport { Link } from \"gatsby\"\nimport styled from \"styled-components\"\nimport {\n  postGridGutter,\n  postGridGutterLarger,\n  postGridGutterSmaller,\n} from \"../../utils/consts\"\nimport styles from \"./PostItemOne.module.scss\"\n\nconst Wrapper = styled.article`\n  position: relative;\n  padding: ${postGridGutterLarger}rem ${postGridGutter}rem\n    ${postGridGutter * 3}rem;\n  border-radius: ${(postGridGutter * 2) / 3}rem;\n  &:hover {\n    background-color: #2d2d2d;\n  }\n  h3 {\n    display: inline-block;\n    margin-top: ${postGridGutterSmaller}rem;\n    margin-bottom: ${postGridGutterLarger}rem;\n  }\n`\n\nconst PostItemOne = ({ post: node }) => {\n  const title = node.frontmatter.title || node.fields.slug\n  return (\n    <Wrapper>\n      <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n        <h3>{title}</h3>\n      </Link>\n\n      <div className={styles.Wrapper}>\n        {node.frontmatter.image && (\n          <img\n            src={node.frontmatter.image.childImageSharp.resize.src}\n            alt={node.frontmatter.description || node.frontmatter.title}\n          />\n        )}\n        <div>\n          <small>{node.frontmatter.date}</small>\n          <p\n            dangerouslySetInnerHTML={{\n              __html: node.frontmatter.description || node.excerpt,\n            }}\n          />\n        </div>\n      </div>\n    </Wrapper>\n  )\n}\n\nexport default PostItemOne\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport One from \"./PostItemOne\"\n\nconst components = [null, One]\n\nconst PostItem = props => React.createElement(components[props.itemType], props)\nPostItem.propTypes = {\n  itemType: PropTypes.number.isRequired,\n}\n\nexport default PostItem\n","import React from \"react\"\nimport styled from \"styled-components\"\nimport { postGridGutter } from \"../utils/consts\"\nimport { mediaMin } from \"../utils/helpers\"\n\nconst respColumn = (props, index, mediaSelect) =>\n    mediaSelect(`\n  flex: 0 0 ${100.0 / props.columns[index]}%;\n  width: ${100.0 / props.columns[index]}%};\n`),\n  PostGrid = styled.div`\n    display: flex;\n    flex-wrap: wrap;\n    margin: ${-postGridGutter}rem;\n    > * {\n      ${props => respColumn(props, 0, mediaMin.phone)}\n    }\n    > * {\n      ${props => respColumn(props, 1, mediaMin.tablet)}\n    }\n    > * {\n      ${props => respColumn(props, 2, mediaMin.desktop)}\n    }\n  `\n\nexport default PostGrid\n","import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport PostItem from \"../components/PostItem/PostItem\"\nimport PostGrid from \"../components/PostGrid\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        <PostGrid columns={[1, 2, 2]}>\n          {posts.map(({ node }) => (\n            <PostItem key={node.fields.slug} itemType={1} post={node} />\n          ))}\n        </PostGrid>\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n            image {\n              childImageSharp {\n                resize(\n                  width: 200\n                  height: 200\n                  toFormat: WEBP\n                  grayscale: true\n                ) {\n                  src\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"16.2px\"\nkirkhamTheme.baseLineHeight = 1.64\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn SC\", styles: [\"400\"] },\n  {\n    name: \"Vollkorn\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn SC\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Vollkorn\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n  \"h1,h2,h3,h4,h5,h6\": {\n    color: \"#fff\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const adjustFontSizeTo = typography.adjustFontSizeTo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Location } from \"@reach/router\"\n\nexport function makeMetaSpecs(prefix, specs) {\n  return specs\n    .filter(spec => Array.isArray(spec) && spec.length >= 2)\n    .map(([field, value, defaultValue]) => ({\n      property: prefix + \":\" + field,\n      content: value || defaultValue,\n    }))\n}\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n  type,\n  image,\n  otherMeta,\n}) {\n  const {\n    site: { siteMetadata },\n    icon,\n  } = useStaticQuery(\n    graphql`\n      query {\n        icon: file(absolutePath: { regex: \"/icon.png/\" }) {\n          childImageSharp {\n            fixed {\n              src\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            url\n            title\n            description\n            author\n            social {\n              facebook\n            }\n          }\n        }\n      }\n    `\n  )\n\n  let metaDescription = description || siteMetadata.description,\n    _image = (image || icon).childImageSharp\n\n  _image = (_image.fixed || _image.fluid).src\n\n  return (\n    <Location>\n      {({ location }) => (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            ...makeMetaSpecs(\"og\", [\n              [\"url\", siteMetadata.url + location.pathname],\n              [\"title\", title],\n              [\"description\", metaDescription],\n              [\"type\", type],\n              [\"image\", _image],\n              [\"image:alt\", metaDescription],\n            ]),\n            ...otherMeta,\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )}\n    </Location>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  type: `website`,\n  otherMeta: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"website\", \"article\"]),\n  otherMeta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\nimport styled from \"styled-components\"\n\nconst responsives = srcSet =>\n    srcSet\n      .split(\",\")\n      .map((src, index) => {\n        let [url, w] = src.trim().split(\" \"),\n          rs = `background-image: url(${url});`\n        if (index > 0)\n          rs = `@media (min-width: ${w.replace(/w/, \"px\")}){\n        ${rs}\n      }`\n        return rs\n      })\n      .join(\"\"),\n  Header = styled.header`\n    ${props => responsives(props.srcSet)}\n  `\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      return (\n        <Header\n          srcSet={banner.childImageSharp.fluid.srcSet}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 12),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                  {blog.category && (\n                    <>\n                      &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                      <strong>{blog.category.title.toUpperCase()}</strong>\n                    </>\n                  )}\n                </p>\n              </div>\n            )}\n          </div>\n        </Header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          srcSet\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n","export const postGridGutter = 0.7\nexport const postGridGutterLarger = postGridGutter * 1.3\nexport const postGridGutterSmaller = postGridGutter / 1.3\n","const sizesMin = {\n  desktop: 1024,\n  tablet: 768,\n  phone: 0,\n}\n\n// Iterate through the sizes and create a media template\nexport const mediaMin = Object.keys(sizesMin).reduce((acc, label) => {\n  acc[label] = rules => `\n    @media (min-width: ${sizesMin[label]}px) {\n      ${rules}\n    }\n  `\n\n  return acc\n}, {})\n","// 19.1.2.14 Object.keys(O)\nvar toObject = require('./_to-object');\nvar $keys = require('./_object-keys');\n\nrequire('./_object-sap')('keys', function () {\n  return function keys(it) {\n    return $keys(toObject(it));\n  };\n});\n","// most Object methods by ES6 should accept primitives\nvar $export = require('./_export');\nvar core = require('./_core');\nvar fails = require('./_fails');\nmodule.exports = function (KEY, exec) {\n  var fn = (core.Object || {})[KEY] || Object[KEY];\n  var exp = {};\n  exp[KEY] = exec(fn);\n  $export($export.S + $export.F * fails(function () { fn(1); }), 'Object', exp);\n};\n"],"sourceRoot":""}