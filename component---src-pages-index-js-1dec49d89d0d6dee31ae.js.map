{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/layout.js","webpack:///./src/components/seo.js"],"names":["BlogIndex","render","data","this","props","siteTitle","site","siteMetadata","title","posts","allMarkdownRemark","edges","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_3__","location","_components_seo__WEBPACK_IMPORTED_MODULE_4__","keywords","map","_ref","node","frontmatter","fields","slug","key","style","marginBottom","rhythm","gatsby__WEBPACK_IMPORTED_MODULE_2__","boxShadow","to","date","dangerouslySetInnerHTML","__html","description","excerpt","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","googleFonts","name","styles","headerFontFamily","bodyFontFamily","overrideThemeStyles","options","a, a:hover, a:active, a:visited","color","textDecoration","typography","Typography","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","Layout","renderHeader","react__WEBPACK_IMPORTED_MODULE_2___default","gatsby__WEBPACK_IMPORTED_MODULE_7__","banner","headerStyle","backgroundImage","childImageSharp","fluid","srcWebp","className","Container","author","_public_static_d_3902628348_json__WEBPACK_IMPORTED_MODULE_1__","SEO","lang","meta","_public_static_d_2417117884_json__WEBPACK_IMPORTED_MODULE_0__","metaDescription","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","content","property","concat","length","join","defaultProps","arrayOf"],"mappings":"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","file":"component---src-pages-index-js-1dec49d89d0d6dee31ae.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\nimport { rhythm } from \"../utils/typography\"\n\nclass BlogIndex extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n    const posts = data.allMarkdownRemark.edges\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO\n          title=\"All posts\"\n          keywords={[`blog`, `gatsby`, `javascript`, `react`]}\n        />\n        {posts.map(({ node }) => {\n          const title = node.frontmatter.title || node.fields.slug\n          return (\n            <div key={node.fields.slug}>\n              <h3\n                style={{\n                  marginBottom: rhythm(1 / 4),\n                }}\n              >\n                <Link style={{ boxShadow: `none` }} to={node.fields.slug}>\n                  {title}\n                </Link>\n              </h3>\n              <small>{node.frontmatter.date}</small>\n              <p\n                dangerouslySetInnerHTML={{\n                  __html: node.frontmatter.description || node.excerpt,\n                }}\n              />\n            </div>\n          )\n        })}\n      </Layout>\n    )\n  }\n}\n\nexport default BlogIndex\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: DESC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            date(formatString: \"MMMM DD, YYYY\")\n            title\n            description\n          }\n        }\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn\", styles: [\"400\"] },\n  {\n    name: \"Roboto\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Roboto\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from \"react\"\nimport Link from \"gatsby-link\"\n\nimport { rhythm, scale } from \"../utils/typography\"\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport { graphql, StaticQuery } from \"gatsby\"\n\nclass Layout extends React.Component {\n  renderHeader = () => (\n    <StaticQuery\n      query={query}\n      render={({banner, site}) => {\n        const headerStyle = {\n          backgroundImage: `url(${banner.childImageSharp.fluid.srcWebp})`,\n        }\n\n        return (\n          <header style={headerStyle}>\n            <div className={styles.Container}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3><i>{site.siteMetadata.description}</i></h3>\n            </div>\n          </header>\n        )\n      }}\n    />\n  )\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div className={styles.Layout}>\n        {this.renderHeader()}\n        <main>\n          <div className={`${styles.Container} mt20`}>{this.props.children}</div>\n        </main>\n      </div>\n    )\n  }\n}\n\nexport const query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default Layout\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  const { site } = useStaticQuery(\n    graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n            description\n            author\n          }\n        }\n      }\n    `\n  )\n\n  const metaDescription = description || site.siteMetadata.description\n\n  return (\n    <Helmet\n      htmlAttributes={{\n        lang,\n      }}\n      title={title}\n      titleTemplate={`%s | ${site.siteMetadata.title}`}\n      meta={[\n        {\n          name: `description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:title`,\n          content: title,\n        },\n        {\n          property: `og:description`,\n          content: metaDescription,\n        },\n        {\n          property: `og:type`,\n          content: `website`,\n        },\n        {\n          name: `twitter:card`,\n          content: `summary`,\n        },\n        {\n          name: `twitter:creator`,\n          content: site.siteMetadata.author,\n        },\n        {\n          name: `twitter:title`,\n          content: title,\n        },\n        {\n          name: `twitter:description`,\n          content: metaDescription,\n        },\n      ]\n        .concat(\n          keywords.length > 0\n            ? {\n                name: `keywords`,\n                content: keywords.join(`, `),\n              }\n            : []\n        )\n        .concat(meta)}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n}\n\nexport default SEO\n"],"sourceRoot":""}