{"version":3,"sources":["webpack:///./src/pages/404.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./src/components/BlogHeader/BlogHeader.js","webpack:///./src/components/layout.js"],"names":["NotFoundPage","render","siteTitle","this","props","data","site","siteMetadata","title","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_2__","location","_components_seo__WEBPACK_IMPORTED_MODULE_3__","React","Component","pageQuery","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","createContext","Consumer","staticQueryData","query","children","propTypes","PropTypes","object","string","isRequired","func","rhythm","scale","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","kirkhamTheme","baseFontSize","baseLineHeight","googleFonts","name","styles","headerFontFamily","bodyFontFamily","overrideThemeStyles","_ref","options","a, a:hover, a:active, a:visited","color","textDecoration","blockquote","fontSize","h1,h2,h3,h4,h5,h6","typography","Typography","adjustFontSizeTo","ProdPageRenderer","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","makeMetaSpecs","prefix","specs","filter","spec","Array","isArray","length","map","field","value","defaultValue","content","SEO","_ref2","description","lang","meta","keywords","type","image","otherMeta","_staticQueryData$data","_public_static_d_545839489_json__WEBPACK_IMPORTED_MODULE_1__","icon","metaDescription","_image","childImageSharp","fixed","fluid","srcWebp","react__WEBPACK_IMPORTED_MODULE_2___default","_reach_router__WEBPACK_IMPORTED_MODULE_5__","_ref3","react_helmet__WEBPACK_IMPORTED_MODULE_4___default","htmlAttributes","titleTemplate","concat","console","log","join","defaultProps","arrayOf","oneOf","BlogHeader","_ref$blog","blog","react_default","gatsby_browser_entry","banner","headerStyle","backgroundImage","style","className","classnames","WithBlogHeader","Container","height","gatsby_link_default","ToHome","to","author","BlogPostHeader","frontmatter","display","marginBottom","marginTop","fontFamily","date","category","Fragment","toUpperCase","_3902628348","Layout","HasBlogPost","components_BlogHeader_BlogHeader","paddingTop"],"mappings":"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","file":"component---src-pages-404-js-a4d7ea06d884254fb853.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout\"\nimport SEO from \"../components/seo\"\n\nclass NotFoundPage extends React.Component {\n  render() {\n    const { data } = this.props\n    const siteTitle = data.site.siteMetadata.title\n\n    return (\n      <Layout location={this.props.location} title={siteTitle}>\n        <SEO title=\"404: Not Found\" />\n        <h1>Not Found</h1>\n        <p>You just hit a route that doesn&#39;t exist... the sadness.</p>\n      </Layout>\n    )\n  }\n}\n\nexport default NotFoundPage\n\nexport const pageQuery = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nkirkhamTheme.baseFontSize = \"15.6px\"\nkirkhamTheme.baseLineHeight = 1.64\nkirkhamTheme.googleFonts = [\n  { name: \"Vollkorn SC\", styles: [\"400\"] },\n  {\n    name: \"Vollkorn\",\n    styles: [\"400\", \"400i\", \"700\", \"700i\"],\n  },\n]\nkirkhamTheme.headerFontFamily = [\"Vollkorn SC\", \"serif\"]\nkirkhamTheme.bodyFontFamily = [\"Vollkorn\", \"sans-serif\"]\nkirkhamTheme.overrideThemeStyles = ({ rhythm }, options) => ({\n  \"a, a:hover, a:active, a:visited\": {\n    color: \"#1e1e1e\",\n    textDecoration: \"none\",\n  },\n  blockquote: {\n    fontSize: \"inherit\",\n  },\n  \"h1,h2,h3,h4,h5,h6\": {\n    color: \"#fff\",\n  },\n})\n\nconst typography = new Typography(kirkhamTheme)\n\n// Hot reload typography in development.\nif (process.env.NODE_ENV !== `production`) {\n  typography.injectStyles()\n}\n\nexport default typography\nexport const rhythm = typography.rhythm\nexport const scale = typography.scale\nexport const adjustFontSizeTo = typography.adjustFontSizeTo\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","/**\n * SEO component that queries for data with\n *  Gatsby's useStaticQuery React hook\n *\n * See: https://www.gatsbyjs.org/docs/use-static-query/\n */\n\nimport React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Helmet from \"react-helmet\"\nimport { useStaticQuery, graphql } from \"gatsby\"\nimport { Location } from \"@reach/router\"\n\nexport function makeMetaSpecs(prefix, specs) {\n  return specs\n    .filter(spec => Array.isArray(spec) && spec.length >= 2)\n    .map(([field, value, defaultValue]) => ({\n      name: prefix + \":\" + field,\n      content: value || defaultValue,\n    }))\n}\n\nfunction SEO({\n  description,\n  lang,\n  meta,\n  keywords,\n  title,\n  type,\n  image,\n  otherMeta,\n}) {\n  const {\n    site: { siteMetadata },\n    icon,\n  } = useStaticQuery(\n    graphql`\n      query {\n        icon: file(absolutePath: { regex: \"/icon.png/\" }) {\n          childImageSharp {\n            fixed {\n              ...GatsbyImageSharpFixed_withWebp\n            }\n          }\n        }\n        site {\n          siteMetadata {\n            title\n            description\n            author\n            social {\n              facebook\n            }\n          }\n        }\n      }\n    `\n  )\n\n  let metaDescription = description || siteMetadata.description,\n    _image = (image || icon).childImageSharp\n\n  _image = (_image.fixed || _image.fluid).srcWebp\n\n  return (\n    <Location>\n      {({ location }) => (\n        <Helmet\n          htmlAttributes={{\n            lang,\n          }}\n          title={title}\n          titleTemplate={`%s | ${siteMetadata.title}`}\n          meta={[\n            {\n              name: `description`,\n              content: metaDescription,\n            },\n            ...makeMetaSpecs(\"og\", [\n              [\n                \"url\",\n                (() => {\n                  console.log(location)\n                  return \"\"\n                })(),\n              ],\n              [\"title\", title],\n              [\"description\", metaDescription],\n              [\"type\", type],\n              [\"image\", _image],\n              [\"image:alt\", metaDescription],\n            ]),\n            ...otherMeta,\n          ]\n            .concat(\n              keywords.length > 0\n                ? {\n                    name: `keywords`,\n                    content: keywords.join(`, `),\n                  }\n                : []\n            )\n            .concat(meta)}\n        />\n      )}\n    </Location>\n  )\n}\n\nSEO.defaultProps = {\n  lang: `en`,\n  meta: [],\n  keywords: [],\n  description: ``,\n  type: `website`,\n  otherMeta: [],\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.arrayOf(PropTypes.object),\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string.isRequired,\n  type: PropTypes.oneOf([\"website\", \"article\"]),\n  otherMeta: PropTypes.arrayOf(\n    PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      content: PropTypes.string.isRequired,\n    })\n  ),\n}\n\nexport default SEO\n","import React from \"react\"\nimport styles from \"../layout.module.scss\"\nimport Link from \"gatsby-link\"\nimport { graphql, StaticQuery } from \"gatsby\"\nimport classnames from \"classnames\"\nimport { rhythm, scale } from \"../../utils/typography\"\n\nconst BlogHeader = ({ blog = null }) => (\n  <StaticQuery\n    query={query}\n    render={({ banner, site }) => {\n      const headerStyle = {\n        backgroundImage: `url(${banner.childImageSharp.fluid.srcWebp})`,\n      }\n\n      return (\n        <header\n          style={headerStyle}\n          className={classnames(blog && styles.WithBlogHeader)}\n        >\n          <div className={styles.Container} style={{ height: \"100%\" }}>\n            <Link className={styles.ToHome} to={\"/\"}>\n              <h1>{site.siteMetadata.author}</h1>\n              <h3>\n                <i>{site.siteMetadata.description}</i>\n              </h3>\n            </Link>\n            {blog && (\n              <div className={styles.BlogPostHeader}>\n                <h1>{blog.frontmatter.title}</h1>\n                <p\n                  style={{\n                    ...scale(-1 / 12),\n                    display: `block`,\n                    marginBottom: rhythm(0.15),\n                    marginTop: rhythm(0),\n                    fontFamily: \"'Vollkorn',serif\",\n                  }}\n                >\n                  {blog.frontmatter.date} by {site.siteMetadata.author}\n                  {blog.category && (\n                    <>\n                      &nbsp;&nbsp;&nbsp;|&nbsp;&nbsp;&nbsp;\n                      <strong>{blog.category.title.toUpperCase()}</strong>\n                    </>\n                  )}\n                </p>\n              </div>\n            )}\n          </div>\n        </header>\n      )\n    }}\n  />\n)\n\nconst query = graphql`\n  query {\n    banner: file(absolutePath: { regex: \"/banner.jpg/\" }) {\n      childImageSharp {\n        fluid(maxWidth: 1920, quality: 90) {\n          ...GatsbyImageSharpFluid_withWebp\n        }\n      }\n    }\n    site {\n      siteMetadata {\n        author\n        description\n      }\n    }\n  }\n`\n\nexport default BlogHeader\n","import React from \"react\"\n\nimport \"../sass/index.scss\"\nimport styles from \"./layout.module.scss\"\nimport BlogHeader from \"./BlogHeader/BlogHeader\"\nimport classnames from \"classnames\"\n\nclass Layout extends React.Component {\n  render() {\n    // const { location, title, children } = this.props\n    // const rootPath = `${__PATH_PREFIX__}/`\n\n    return (\n      <div\n        className={classnames(\n          styles.Layout,\n          this.props.blog && styles.HasBlogPost\n        )}\n      >\n        <BlogHeader blog={this.props.blog} />\n        <main style={{ paddingTop: \"1px\", marginTop: \"-1px\" }}>\n          <div className={`${styles.Container} mt20`}>\n            {this.props.children}\n          </div>\n        </main>\n      </div>\n    )\n  }\n}\n\nLayout.defaultProps = {\n  blog: null,\n}\n\nexport default Layout\n"],"sourceRoot":""}